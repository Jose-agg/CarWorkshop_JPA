<?xml version="1.0" encoding="UTF-8"?>
<entity-mappings 
	xmlns="http://java.sun.com/xml/ns/persistence/orm" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  	xsi:schemaLocation="http://java.sun.com/xml/ns/persistence/orm http://java.sun.com/xml/ns/persistence/orm_2_0.xsd"
  	version="2.0">

	<!-- Averia queries --> 
	<named-query name="Averia.findByIds">
		<query>select a from Averia a where a.id in ?1</query>
	</named-query>

	<named-query name="Averia.findNoFacturadasByDni">
		<query>
			select a 
			from Averia a 
			where a.vehiculo.cliente.dni = ?1 
			and a.status = uo.ri.model.types.AveriaStatus.TERMINADA 
		</query>
	</named-query>
	
	<named-query name="Averia.findNoUsadasByClienteId">
		<query>
			select a
			from Averia a
			where a.vehiculo.cliente.id = ?1
			and a.usada_bono = false 
			and a.status = uo.ri.model.types.AveriaStatus.FACTURADA
		</query>
	</named-query>
	
	<!-- Cargo queries --> 
	
	<!-- Cliente queries --> 
	<named-query name="Cliente.findByDni">
		<query>select c from Cliente c where c.dni = ?1</query>
	</named-query>
	
	<named-query name="Cliente.findWithRecommendations">
		<query>
			select m from Cliente m,Recomendacion r 
			where m.id=r.recomendador.id 
			group by m.id
		</query>
	</named-query>
	
	<named-query name="Cliente.findWithThreeUnusedBreakdowns">
		<query> 
			select v.cliente from Vehiculo v 
			where v.id in (
				select v2.id from Averia a join a.vehiculo v2 
				where a.usada_bono = false
				group by v2.id having count(a)>=3 )
		</query>
	</named-query>
	
	<named-query name = "Cliente.findRecomendedBy">
		<query>SELECT c FROM Cliente c WHERE 
		c.recomendacionRecibida.recomendador.id = ?1</query>
	</named-query>
	
	<!-- Factura queries -->
	<named-query name="Factura.findByNumber">
		<query>
			select f from Factura f 
			where f.numero = ?1
		</query>
	</named-query>
	
	<named-query name="Factura.getNextInvoiceNumber">
		<query>
			select max(f.numero) + 1 from Factura f
		</query>
	</named-query>
	
	<named-query name="Factura.findUnusedWithBono500">
		<query>
			SELECT f FROM Factura f 
			where f.status = uo.ri.model.types.FacturaStatus.ABONADA
			and f.usada_bono = false
			and f.importe >= 500.0
		</query>
	</named-query>
	
	<!-- Mecanico queries -->
	<named-query name="Mecanico.findAll">
		<query>
			select m from Mecanico m
		</query>
	</named-query>
	
	<named-query name="Mecanico.findByDni">
		<query>
			select m from Mecanico m 
			where m.dni =?1
		</query>
	</named-query>
	
	<!-- MedioPago queries -->
	<named-query name="MedioPago.findAllByClientId">
		<query>
			select m from MedioPago m 
			where m.cliente.id =?1
		</query>
	</named-query>
	
	<named-query name="MedioPago.findByInvoiceId">
		<query>
			select m 
			from Factura f join f.averias a join a.vehiculo.cliente c join c.mediosPago m 
			where f.id = ?1
		</query>
	</named-query>
	
	<named-query name="MedioPago.findAggregateVoucherDataByClientId">
		<query>
			select count (m),sum(m.acumulado),sum(b.disponible) 
			from MedioPago m,Bono b 
			where m.id=b.id 
			and m.cliente.id=?1
		</query>
	</named-query>
	
	<named-query name="MedioPago.findCreditCardByNumber">
		<query>
			select m 
			from TarjetaCredito m 
			where m.numero =?1
		</query>
	</named-query>
	
	<named-query name="MedioPago.findVouchersByClientId">
		<query>
			select b 
			from MedioPago m, Bono b 
			where m.id=b.id 
			and m.cliente.id =?1
		</query>
	</named-query>
	
	<named-query name="MedioPago.findVoucherByCode">
		<query>
			select m 
			from Bono m 
			where m.codigo =?1
		</query>
	</named-query>

<!-- 
	<named-query name="findItemsOnSaleByCategoryId">
		<query>
			<![CDATA[
			select i 
				from Item i join i.categories c
				where c.id = ?2
					and i.startDate <= ?1
					and i.endDate >= ?1 
			]]>
		</query>
	</named-query>
 -->		

</entity-mappings>